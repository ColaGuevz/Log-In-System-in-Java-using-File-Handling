package account;

import java.awt.HeadlessException;
import javax.swing.*;
import java.util.Random;
import java.io.FileWriter;
import java.io.FileReader;
import java.io.File;
import java.io.IOException;
import java.util.regex.Matcher;
import java.util.regex.Pattern;

public class CreateAccount extends javax.swing.JFrame {
    
    public CreateAccount() {
        initComponents();
        
    }
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel5 = new javax.swing.JLabel();
        jLabel1 = new javax.swing.JLabel();
        userEmail = new javax.swing.JTextField();
        jLabel2 = new javax.swing.JLabel();
        userName = new javax.swing.JTextField();
        jLabel3 = new javax.swing.JLabel();
        userPassword = new javax.swing.JTextField();
        jLabel4 = new javax.swing.JLabel();
        sendConfirmationNumberButton = new javax.swing.JButton();
        confirmationSlot = new javax.swing.JTextField();
        jLabel6 = new javax.swing.JLabel();
        otpConfirmButton = new javax.swing.JButton();
        jButton1 = new javax.swing.JButton();

        jLabel5.setText("Password");

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setTitle("Welcome to Account Simulator");

        jLabel1.setFont(new java.awt.Font("Segoe UI Black", 1, 18)); // NOI18N
        jLabel1.setText("CREATE YOUR OWN ACCOUNT");
        jLabel1.setToolTipText("");

        userEmail.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                userEmailActionPerformed(evt);
            }
        });

        jLabel2.setText("Email Address");

        jLabel3.setText("Username");

        userPassword.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                userPasswordActionPerformed(evt);
            }
        });

        jLabel4.setText("Password");

        sendConfirmationNumberButton.setText("Send Confirmation");
        sendConfirmationNumberButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                sendConfirmationNumberButtonActionPerformed(evt);
            }
        });

        confirmationSlot.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                confirmationSlotActionPerformed(evt);
            }
        });

        jLabel6.setText("Enter 6 Digit Confirmation Number");

        otpConfirmButton.setText("Confirm Account");
        otpConfirmButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                otpConfirmButtonActionPerformed(evt);
            }
        });

        jButton1.setText("Log in");
        jButton1.setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(72, 72, 72)
                        .addComponent(jLabel1))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(24, 24, 24)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                .addComponent(sendConfirmationNumberButton)
                                .addComponent(jLabel4)
                                .addComponent(jLabel3)
                                .addComponent(jLabel2)
                                .addComponent(userEmail, javax.swing.GroupLayout.DEFAULT_SIZE, 347, Short.MAX_VALUE)
                                .addComponent(userName)
                                .addComponent(userPassword))
                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                                .addComponent(confirmationSlot, javax.swing.GroupLayout.Alignment.LEADING)
                                .addComponent(jLabel6, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(otpConfirmButton)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(jButton1, javax.swing.GroupLayout.PREFERRED_SIZE, 109, javax.swing.GroupLayout.PREFERRED_SIZE)))))
                .addContainerGap(61, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(userEmail, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jLabel2)
                .addGap(18, 18, 18)
                .addComponent(userName, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jLabel3)
                .addGap(18, 18, 18)
                .addComponent(userPassword, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jLabel4)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(sendConfirmationNumberButton)
                .addGap(21, 21, 21)
                .addComponent(confirmationSlot, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jLabel6)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(otpConfirmButton)
                    .addComponent(jButton1))
                .addContainerGap(15, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void userEmailActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_userEmailActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_userEmailActionPerformed

    private void userPasswordActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_userPasswordActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_userPasswordActionPerformed

    private String emailUser;
    private String nameUser;
    private String passwordUser;
    private boolean isFileDuplicated = false;
    private void sendConfirmationNumberButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_sendConfirmationNumberButtonActionPerformed
        
        Pattern pMail = Pattern.compile("\\b[\\w.%-]+@[-.\\w]+\\.[A-Za-z]{2,4}\\b");
        Matcher mMail = pMail. matcher(userEmail.getText());
        
        boolean isEmailValid = mMail.matches();
        
        if(userEmail.getText().isEmpty() || userName.getText().isEmpty() || userPassword.getText().isEmpty())
        {
            JOptionPane.showMessageDialog(null, "Please enter all needed fields!");
        }
        else if(isEmailValid == false)
        {
            JOptionPane.showMessageDialog(null, "Please enter a valid email!");
        }
        else
        {
            emailUser = userEmail.getText().trim();
            nameUser = userName.getText().trim();
            passwordUser = userPassword.getText().trim();
            createFile(nameUser, emailUser, passwordUser);
            if(isFileDuplicated == true)
            {
                JOptionPane.showMessageDialog(null,"Email already taken!");
            }
            else
            {
                sendConfirmation(emailUser);
                JOptionPane.showMessageDialog(null,"Kindly check your directory for the confirmation code!");
            }
            //new Confirmation().setVisible(true);
        }
    }//GEN-LAST:event_sendConfirmationNumberButtonActionPerformed

    private void confirmationSlotActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_confirmationSlotActionPerformed
        // TODO add your handling code here:
        
    }//GEN-LAST:event_confirmationSlotActionPerformed
    
    private String inputtedConfirmationNumByUser;
    private void otpConfirmButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_otpConfirmButtonActionPerformed
        
        JFrame  f = new JFrame();
        if(confirmationSlot.getText().isEmpty())
        {
            JOptionPane.showMessageDialog(null, "Please enter all needed fields!");
        }
        else
        {
            this.inputtedConfirmationNumByUser = confirmationSlot.getText().trim();
            if(this.inputtedConfirmationNumByUser.equals(str))
            {
                JOptionPane.showMessageDialog(f,"Account succesfully created! Kindly proceed to log in! ");
                
                try
                {
                    File f3 = new File("C:\\Users\\user\\Documents\\NetBeansProjects\\Account\\Account\\Database\\" + emailUser + "OTP.txt");
                    f3.delete();
                }
                catch(Exception e)
                {
                    e.getStackTrace();
                }
            }
            else
            {
                JOptionPane.showMessageDialog(null,"Confirmation number did not matched! Try again later!"); 
                //deleteFile(this.emailUser);
            }
        }
        new MainPage().setVisible(true);
        dispose();
    }//GEN-LAST:event_otpConfirmButtonActionPerformed

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        // TODO add your handling code here:
        new MainPage().setVisible(true);
        dispose();
    }//GEN-LAST:event_jButton1ActionPerformed
    
    //getter for Email address of the user
    public String getEmail()
    {
        return this.userEmail.getText();
    }
    
    //file creator for the information of the user
    public void createFile(String name, String email, String passcode)
    {
        //file creator
        try 
        {
            // trying to create a file based on the object
            File file = new File("C:\\Users\\user\\Documents\\NetBeansProjects\\Account\\Account\\Database\\" + email + ".txt");
            boolean value = file.createNewFile();
            if (value) 
            {
                FileWriter output = new FileWriter("C:\\Users\\user\\Documents\\NetBeansProjects\\Account\\Account\\Database\\" + email + ".txt");
                output.write("User Information\n" + email + "\n" + name + "\n" + passcode);

            output.close();
            }
            else 
            {
                isFileDuplicated = true;
            }
    	}
    	catch(HeadlessException | IOException e)
    	{
      		e.getStackTrace();
    	}
    }
    
    //creating file for the confirmation number
    private int confirmationNumber;
    private String str;
    private void sendConfirmation(String email)
    {
        Random a = new Random();
        this.confirmationNumber = a.nextInt(899999) + 100000;
        //file writer
        str = Integer.toString(this.confirmationNumber);
        try
        {
            FileWriter output = new FileWriter("C:\\Users\\user\\Documents\\NetBeansProjects\\Account\\Account\\Database\\" + email + "OTP.txt");
            output.write(str);
            output.close();
        }
        catch(IOException e)
        {
            e.getStackTrace();
        }
    }
    
    //file reader for the confirmation number
    private String otp;
    private String readOTP(String fileName)
    {
        char[] array = new char[100];
        try 
        {
            //BufferedReader input = new BufferedReader(new FileReader("C:\\Users\\user\\Documents\\NetBeansProjects\\Account\\Account\\Database\\" + fileName + "OTP.txt"));
            //otp = input.readLine();
            FileReader input = new FileReader("C:\\Users\\user\\Documents\\NetBeansProjects\\Account\\Account\\Database\\" + fileName + "OTP.txt");
            input.read(array);
            input.close();
        } 
       catch(IOException e)
        {
            e.getStackTrace();
        }
        this.otp = String.valueOf(array);
        return this.otp;
    }
    
    //file deleter
    private void deleteFile(String fileName)
    {
        try
        {
            File f1 = new File("C:\\Users\\user\\Documents\\NetBeansProjects\\Account\\Account\\Database\\" + fileName + "OTP.txt");
            File f2 = new File("C:\\Users\\user\\Documents\\NetBeansProjects\\Account\\Account\\Database\\" + fileName + ".txt");
            f1.delete();
            f2.delete();
        }
        catch(Exception e)
        {
            e.getStackTrace();
        }
    }

    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(CreateAccount.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(CreateAccount.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(CreateAccount.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(CreateAccount.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(() -> {
            new CreateAccount().setVisible(true);
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JTextField confirmationSlot;
    private javax.swing.JButton jButton1;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JButton otpConfirmButton;
    private javax.swing.JButton sendConfirmationNumberButton;
    private javax.swing.JTextField userEmail;
    private javax.swing.JTextField userName;
    private javax.swing.JTextField userPassword;
    // End of variables declaration//GEN-END:variables
}
